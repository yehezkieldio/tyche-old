services:
  postgres:
    container_name: tyche-postgres
    profiles: [development]
    image: postgres:latest
    environment:
      POSTGRES_USER: elizielx
      POSTGRES_PASSWORD: elizielx
      POSTGRES_DB: tyche
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tyche-network
  redpanda:
    profiles: [development]
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: tyche-redpanda
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    networks:
      - tyche-network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  redpanda_console:
    profiles: [development]
    container_name: tyche-redpanda-console
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - tyche-network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda
  prometheus:
    image: prom/prometheus:latest
    container_name: tyche-prometheus
    profiles: [observability]
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - tyche-network
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: tyche-postgres-exporter
    profiles: [observability]
    environment:
      DATA_SOURCE_NAME: "postgresql://elizielx:elizielx@postgres:5432/tyche?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - tyche-network
    depends_on:
      - postgres
  grafana:
    image: grafana/grafana:latest
    container_name: tyche-grafana
    profiles: [observability]
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/overview.json
    ports:
      - "3000:3000"
    networks:
      - tyche-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
    name: tyche-postgres-data
  redpanda_data:
    name: tyche-redpanda-data
  prometheus_data:
    name: tyche-prometheus-data
  grafana_data:
    name: tyche-grafana-data

networks:
  tyche-network:
    name: tyche-network
    driver: bridge